jobs:
  - job: deploy_attestation_container
    displayName: "Deploy Attestation Container"
    variables:
      Codeql.SkipTaskAutoInjection: true
      skipComponentGovernanceDetection: true
    pool:
      vmImage: ubuntu-20.04
    steps:
      - template: azure_cli.yml
        parameters:
          app_id: $(ATTESTATION_CONTAINER_CI_APP_ID)
          service_principal_password: $(ATTESTATION_CONTAINER_CI_SERVICE_PRINCIPAL_PASSWORD)
          tenant: $(ATTESTATION_CONTAINER_CI_TENANT)

      - template: build-ci-container.yml
        parameters:
          src_dir: attestation-container
          image_name: attestation-container
          container_registry: attestationcontainerregistry
          docker_build_options: "--build-arg variant=dev"

      - script: |
          set -ex
          python3.8 -m venv ./scripts/azure_deployment/.env
          source ./scripts/azure_deployment/.env/bin/activate
          pip install -r ./scripts/azure_deployment/requirements.txt
          python3.8 scripts/azure_deployment/arm_template.py deploy aci \
            --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) \
            --resource-group attestation-container \
            --aci-type dynamic-agent \
            --deployment-name ci-$(Build.BuildNumber) \
            --attestation-container-e2e \
            --generate-security-policy
        name: deploy_attestation_container
        displayName: "Deploy Attestation Container"
        env:
          CCF_AZURE_SUBSCRIPTION_ID: $(CCF_AZURE_SUBSCRIPTION_ID)

  - job: cleanup_aci
    displayName: "Cleanup Attestation Container"
    pool:
      vmImage: ubuntu-20.04
    dependsOn:
      - deploy_attestation_container
      - ${{ parameters.used_by }}
    condition: always()
    steps:
      - template: azure_cli.yml
        parameters:
          app_id: $(ATTESTATION_CONTAINER_CI_APP_ID)
          service_principal_password: $(ATTESTATION_CONTAINER_CI_SERVICE_PRINCIPAL_PASSWORD)
          tenant: $(ATTESTATION_CONTAINER_CI_TENANT)

      - script: |
          set -ex
          python3.8 -m venv ./scripts/azure_deployment/.env
          source ./scripts/azure_deployment/.env/bin/activate
          pip install -r ./scripts/azure_deployment/requirements.txt
          python3.8 scripts/azure_deployment/arm_template.py remove aci \
          --subscription-id $(CCF_AZURE_SUBSCRIPTION_ID) \
          --resource-group attestation-container \
          --aci-type dynamic-agent \
          --deployment-name ci-$(Build.BuildNumber)
        name: cleanup_aci
        displayName: "Delete the ACI and Azure Deployment"

  - job: cleanup_container_image
    displayName: "Cleanup Attestation Container image"
    pool:
      vmImage: ubuntu-20.04
    dependsOn:
      - deploy_attestation_container
      - ${{ parameters.used_by }}
    variables:
      image_version: $[ dependencies.deploy_attestation_container.outputs['build_ci_container.image_version'] ]
    condition: always()
    steps:
      - template: azure_cli.yml
        parameters:
          app_id: $(ATTESTATION_CONTAINER_CI_APP_ID)
          service_principal_password: $(ATTESTATION_CONTAINER_CI_SERVICE_PRINCIPAL_PASSWORD)
          tenant: $(ATTESTATION_CONTAINER_CI_TENANT)

      - script: |
          set -ex
          az acr repository delete --name attestationcontainerregistry --image attestation-container:$(image_version) --yes

        name: cleanup_container_image
        displayName: "Delete the container image"
