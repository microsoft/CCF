parameters:
  env:
    NoSGX:
      container: nosgx
      pool: Ubuntu-1804-D8s_v3
    SGX:
      container: sgx
      pool: Ubuntu-1804-DC8_v2
    Perf:
      pool: CCF-Perf

  build:
    common:
      cmake_args: "-DLONG_TESTS=ON"
    NoSGX:
      cmake_args: "-DCOMPILE_TARGETS=virtual"
    SGX:
      cmake_args: "-DCOMPILE_TARGETS=sgx"
    debug:
      cmake_args: "-DCMAKE_BUILD_TYPE=Debug -DSAN=ON -DLVI_MITIGATIONS=OFF"
    fuzz:
      cmake_args: "-DBUILD_UNIT_TESTS=OFF -DZAP_TEST=ON"

  test:
    fuzz:
      ctest_args: '-L "zaptest"'

jobs:
  - job: "Make"
    displayName: "Make generator"
    ${{ insert }}: "${{ parameters.env.NoSGX }}"
    steps:
      - checkout: self
        clean: true
        fetchDepth: 10000
      - script: |
          set -ex
          mkdir build_make
          cd build_make
          cmake -L .. ${{ parameters.build.NoSGX.cmake_args }}
        displayName: CMake

  - template: common.yml
    parameters:
      target: NoSGX
      env: "${{ parameters.env.NoSGX }}"
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.debug.cmake_args }} ${{ parameters.build.NoSGX.cmake_args }}"
      suffix: "Instrumented"
      artifact_name: "NoSGX_Instrumented"
      ctest_filter: '-LE "benchmark|perf|partitions"'
      ctest_timeout: "300"
      timeoutInMinutes: 120

  - template: common.yml
    parameters:
      target: SGX
      env: "${{ parameters.env.SGX }}"
      cmake_args: "${{ parameters.build.common.cmake_args }} -DTLS_TEST=ON -DSHUFFLE_SUITE=ON -DENABLE_BFT=OFF"
      suffix: "Release"
      artifact_name: "SGX_Release"
      ctest_filter: '-LE "benchmark|perf|rotation|partitions"'

  - template: common.yml
    parameters:
      target: NoSGX
      # Perf env to launch a Docker container inside tests.
      env: ${{ parameters.env.Perf }}
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.fuzz.cmake_args }} ${{ parameters.build.NoSGX.cmake_args }}"
      suffix: "Fuzz"
      artifact_name: "NoSGX_Fuzz"
      ctest_filter: "${{ parameters.test.fuzz.ctest_args }}"
