parameters:
  env:
    Virtual:
      container: virtual
      pool: ado-virtual-ccf-sub
    SGX:
      container: sgx
      pool: ado-sgx-ccf-sub
    SNPCC:
      container: snp
      pool: ado-virtual-ccf-sub

  build:
    common:
      cmake_args: "-DLONG_TESTS=ON"
      cmake_env: ""
    Virtual:
      cmake_args: "-DCOMPILE_TARGET=virtual"
      cmake_env: "CC=`which clang-15` CXX=`which clang++-15`"
    SGX:
      cmake_args: "-DCOMPILE_TARGET=sgx"
      cmake_env: ""
    SNPCC:
      cmake_args: "-DCOMPILE_TARGET=snp -DLVI_MITIGATIONS=OFF -DLONG_TESTS=OFF"
      cmake_env: "CC=`which clang-15` CXX=`which clang++-15`"
    debug:
      cmake_args: "-DCMAKE_BUILD_TYPE=Debug -DLVI_MITIGATIONS=OFF"
      cmake_env: ""
    SAN:
      cmake_args: "-DSAN=ON"
      cmake_env: ""
    unsafe:
      cmake_args: "-DLVI_MITIGATIONS=OFF -DVERBOSE_LOGGING=ON -DUNSAFE_VERSION=ON"
      cmake_env: ""
    QUICTLS:
      cmake_args: "-DENABLE_QUICTLS=ON"
      cmake_env: ""

jobs:
  - job: "Make"
    displayName: "Make generator"
    ${{ insert }}: "${{ parameters.env.Virtual }}"
    dependsOn: configure
    steps:
      - checkout: self
        clean: true
        fetchDepth: 10000
      - script: |
          set -ex
          mkdir build_make
          cd build_make
          cmake -L .. ${{ parameters.build.Virtual.cmake_args }}
        displayName: CMake

  - template: common.yml
    parameters:
      target: Virtual
      env: "${{ parameters.env.Virtual }}"
      fetch_quictls: debug
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.debug.cmake_args }} ${{ parameters.build.SAN.cmake_args }} ${{ parameters.build.QUICTLS.cmake_args }} ${{ parameters.build.Virtual.cmake_args }}"
      suffix: "Instrumented"
      artifact_name: "Virtual_Instrumented"
      ctest_filter: '-LE "benchmark|perf"'
      ctest_timeout: "1600"
      depends_on: configure

  - template: common.yml
    parameters:
      target: Virtual
      env: "${{ parameters.env.Virtual}}"
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.debug.cmake_args }} ${{ parameters.build.Virtual.cmake_args }}"
      suffix: "ScanBuild"
      artifact_name: "Virtual_ScanBuild"
      depends_on: configure

  - template: common.yml
    parameters:
      target: SGX
      env: "${{ parameters.env.SGX }}"
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.SGX.cmake_args }} -DCLIENT_PROTOCOLS_TEST=ON -DSHUFFLE_SUITE=ON"
      suffix: "Release"
      artifact_name: "SGX_Release"
      ctest_filter: '-LE "benchmark|perf|rotation"'
      depends_on: configure

  - template: common.yml
    parameters:
      target: SNPCC
      env: ${{ parameters.env.SNPCC }}
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.SNPCC.cmake_args }} -DCLIENT_PROTOCOLS_TEST=ON -DSHUFFLE_SUITE=ON"
      cmake_env: "${{ parameters.build.SNPCC.cmake_env }}"
      suffix: "Release"
      artifact_name: "SNPCC_Release"
      ctest_filter: '-LE "benchmark|perf|rotation"'
      depends_on: configure

  - template: common.yml
    parameters:
      target: Virtual
      env: ${{ parameters.env.Virtual }}
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.Virtual.cmake_args }} -DCLIENT_PROTOCOLS_TEST=ON -DSHUFFLE_SUITE=ON"
      suffix: "Release"
      artifact_name: "Virtual_Release"
      ctest_filter: '-LE "benchmark|perf|rotation"'
      depends_on: configure

  - template: common.yml
    parameters:
      target: SGX
      env: "${{ parameters.env.SGX }}"
      cmake_args: "${{ parameters.build.common.cmake_args }} ${{ parameters.build.SGX.cmake_args }} ${{ parameters.build.unsafe.cmake_args }}"
      suffix: "Unsafe"
      artifact_name: "SGX_Unsafe"
      ctest_filter: '-LE "benchmark|perf|rotation"'
      depends_on: configure
