parameters:
  depends_on: ""
  condition: ""

jobs:
  - job: ${{ parameters.job_name }}
    displayName: ${{ parameters.display_name }}
    dependsOn: ${{ parameters.depends_on }}
    condition: ${{ parameters.condition }}
    pool:
      vmImage: ubuntu-20.04
    timeoutInMinutes: 120
    variables:
      RUN_ON: ${{ parameters.run_on }}
      HOST_PRIVATE_KEY: ${{ parameters.host_private_key }}

    steps:
      - script: |
          set -ex
          mkdir ~/.ssh
          echo $(HOST_PRIVATE_KEY) | base64 -d > ~/.ssh/id_rsa
          sudo chmod 600 ~/.ssh/id_rsa
        name: setup_key
        displayName: "Install SSH Key from Deployment Step"

      - script: |
          set -ex
          mapfile -t IP_ADDR_LIST <<< $(echo "$(RUN_ON)" | awk '{print $2}')
          for IP_ADDR in "${IP_ADDR_LIST[@]}"; do
            echo -e "Testing connection with $IP_ADDR"
            ssh agent@$IP_ADDR -o "StrictHostKeyChecking no" 'echo "Connected successfully for port 22"'
          done
        name: test_connection
        displayName: "Test Connection to Deployed ACIs"

      - script: |
          set -ex
          # The following sed is to change 20221213.48 to 2022121348 for example
          echo "##vso[task.setvariable variable=BUILD_NUMBER]$(echo $(Build.BuildNumber) | sed 's/\.//g')"
        name: set_build_number_var
        displayName: "Set BUILD_NUMBER variable"

      - script: |
          set -ex
          echo "##vso[task.setvariable variable=IP_ADDR]$(echo "$(RUN_ON)" | awk -v container_group="ci-$(BUILD_NUMBER)-business-logic" '$1 == container_group {print $2}')"
        name: set_ip_addr_var
        displayName: "Set IP_ADDR variable"

      - script: |
          set -ex
          ssh agent@$IP_ADDR -o "StrictHostKeyChecking no" 'echo "Connected successfully for port 22" && cd /usr/src/app/attest && /usr/local/go/bin/go test'
        name: run_unit_test
        displayName: "Unit Test in Attestation Container Instance Deployed ACIs"
      

      - script: |
          set -ex
          ssh agent@$IP_ADDR -o "StrictHostKeyChecking no" 'echo "Connected successfully for port 22" && cd /usr/src/app && /usr/local/go/bin/go test'
        name: run_e2e_test
        displayName: "E2E Test in Attestation Container Instance Deployed ACIs"
