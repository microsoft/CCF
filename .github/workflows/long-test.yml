name: Long Test

on:
  pull_request:
    types:
      - labeled
      - synchronize
      - opened
      - reopened
  schedule:
    - cron: "0 0 * * 1-5"
  workflow_dispatch:

jobs:
  scan_build:
    name: "Scan build"
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-long-test') || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-05-12-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Run scan"
        run: |
          set -x
          mkdir build
          cd build
          ../scripts/scan-build.sh

  long-asan:
    name: ASAN
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-long-test') || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-05-12-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "Install deps"
        run: |
          sudo apt-get -y update
          sudo apt install ansible -y
          cd getting_started/setup_vm
          ansible-playbook ccf-extended-testing.yml

      - name: "Build"
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          mkdir build
          cd build
          cmake -GNinja -DCOMPILE_TARGET=virtual -DCMAKE_BUILD_TYPE=Debug -DLONG_TESTS=ON -DLVI_MITIGATIONS=OFF -DSAN=ON ..
          ninja

      - name: "Test"
        run: |
          set +x
          cd build
          ./tests.sh --output-on-failure --timeout 1600 -LE "benchmark"

      - name: "Upload logs"
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-asan
          path: |
            build/workspace/*/*.config.json
            build/workspace/*/out
            build/workspace/*/err
            build/workspace/*.ledger/*
          if-no-files-found: ignore

  long-tsan:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-long-test') || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule' }}
    name: TSAN
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-05-12-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build"
        run: |
          git config --global --add safe.directory /__w/CCF/CCF
          mkdir build
          cd build
          cmake -GNinja -DCOMPILE_TARGET=virtual -DCMAKE_BUILD_TYPE=Debug -DLONG_TESTS=ON -DLVI_MITIGATIONS=OFF -DTSAN=ON -DWORKER_THREADS=2 ..
          ninja

      - name: "Test"
        run: |
          set +x
          cd build
          ./tests.sh --output-on-failure --timeout 1600 -LE "benchmark"

      - name: "Upload logs"
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-tsan
          path: |
            build/workspace/*/*.config.json
            build/workspace/*/out
            build/workspace/*/err
            build/workspace/*.ledger/*
          if-no-files-found: ignore

  long-lts:
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-long-test') || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'}}
    name: LTS
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: ghcr.io/microsoft/ccf/ci/default:build-05-12-2024

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build"
        run: |
          git config --global --add safe.directory /__w/CCF/CCF
          mkdir build
          cd build
          cmake -GNinja -DCOMPILE_TARGET=virtual -DCMAKE_BUILD_TYPE=Debug -DLONG_TESTS=ON -DLVI_MITIGATIONS=OFF -DWORKER_THREADS=2 ..
          ninja

      - name: "Test"
        run: |
          set +x
          cd build
          ./tests.sh --output-on-failure --timeout 1600 -R lts

      - name: "Upload logs"
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs-lts
          path: |
            build/workspace/*/*.config.json
            build/workspace/*/out
            build/workspace/*/err
            build/workspace/*.ledger/*
          if-no-files-found: ignore
