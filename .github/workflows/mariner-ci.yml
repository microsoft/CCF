name: CI (Mariner)

on:
  pull_request:
    types:
      - labeled
      - synchronize
      - opened
      - reopened
  schedule:
    - cron: "0 0 * * 1-5"
  workflow_dispatch:

jobs:
  build_azure_linux:
    name: "Azure Linux CI"
    if: ${{ contains(github.event.pull_request.labels.*.name, 'run-long-test') || github.event_name == 'workflow_dispatch' || github.event_name == 'schedule'}}
    runs-on: [self-hosted, 1ES.Pool=gha-virtual-ccf-sub]
    container:
      image: mcr.microsoft.com/azurelinux/base/core:3.0
      options: --user root --publish-all --cap-add NET_ADMIN --cap-add NET_RAW --cap-add SYS_PTRACE -v /lib/modules:/lib/modules:ro

    steps:
      - name: "Install dependencies"
        run: |
          set -ex
          gpg --import /etc/pki/rpm-gpg/MICROSOFT-RPM-GPG-KEY
          tdnf -y update
          # Source control
          tdnf -y install ca-certificates git
          # Build tools
          tdnf -y install build-essential clang cmake ninja-build which
          # Dependencies
          tdnf -y install openssl-devel libuv-devel
          # Test dependencies
          tdnf -y install libarrow-devel parquet-libs-devel
        shell: bash

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Build Debug"
        run: |
          set -ex
          git config --global --add safe.directory /__w/CCF/CCF
          mkdir build
          cd build
          CC=`which clang` CXX=`which clang++` cmake -GNinja -DCOMPILE_TARGET=virtual -DCMAKE_BUILD_TYPE=Debug -DLVI_MITIGATIONS=OFF -DUSE_LIBCXX=OFF ..
          ninja
        shell: bash
