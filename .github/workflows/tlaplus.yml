name: "TLA+ Spec Verification"

on:
  push:
    paths:
      - "tla/**"
  pull_request:
    paths:
      - "tla/**"
  workflow_dispatch:

jobs:
  model-checker:
    name: Run TLC Model Checker Against CCF Raft Spec
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: python ./tla/install_deps.py

      - name: MCccfraft.tla
        run: |
          set -exo pipefail
          cd tla/
          java -XX:+UseParallelGC -Dtlc2.TLC.ide=Github -Dutil.ExecutionStatisticsCollector.id=be29f6283abeed2fb1fd0be898bc6601 -cp tla2tools.jar tlc2.TLC -workers auto -lncheck final -checkpoint 60 -coverage 60 -tool MCccfraft.tla 2>&1 | tee MCccfraft.out
      - name: MCccfraftWithReconfig.tla
        run: |
          set -exo pipefail
          cd tla/
          java -XX:+UseParallelGC -Dtlc2.TLC.ide=Github -Dutil.ExecutionStatisticsCollector.id=be29f6283abeed2fb1fd0be898bc6601 -cp tla2tools.jar tlc2.TLC -workers auto -lncheck final -checkpoint 60 -coverage 60 -tool -config MCccfraft.cfg MCccfraftWithReconfig.tla 2>&1 | tee MCccfraftWithReconfig.out
      - name: SIMccfraft.tla
        run: |
          set -exo pipefail
          cd tla/
          java -XX:+UseParallelGC -Dtlc2.TLC.ide=Github -Dutil.ExecutionStatisticsCollector.id=be29f6283abeed2fb1fd0be898bc6601 -cp tla2tools.jar tlc2.TLC -workers auto -lncheck final -checkpoint 60 -coverage 60 -tool -simulate -depth 500 SIMccfraft.tla 2>&1 | tee SIMccfraft.out

      - name: Upload TLC's out file as an artifact. Can be imported into the TLA+ Toolbox.
        uses: actions/upload-artifact@v2
        if: ${{ failure() }}
        with:
          name: tlc
          path: tla/*.out
