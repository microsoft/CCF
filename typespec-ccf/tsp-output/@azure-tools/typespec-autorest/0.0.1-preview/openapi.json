{
  "swagger": "2.0",
  "info": {
    "title": "Managed CCF Governance",
    "version": "0.0.1-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/gov/members/encrypted-recovery-shares/{memberId}": {
      "get": {
        "operationId": "ConsortiumGov_GetEncryptedShare",
        "description": "A member's recovery share, encrypted with that member's share-encryption key.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/EncryptedRecoveryShare"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/members/members/{memberId}:recover": {
      "post": {
        "operationId": "ConsortiumGov_SubmitRecoveryShare",
        "description": "Provide a recovery share for the purpose of completing a service recovery.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/RecoveryShare"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/RecoveryResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/members/proposals": {
      "get": {
        "operationId": "ConsortiumGov_ListOpenProposals",
        "description": "Returns all current proposed changes to the service. Note that non-open proposals (ie - those which have already been accepted, rejected, withdrawn, etc) are not returned.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Proposal"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "Proposal[]",
                  "description": "The Proposal items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of Proposal items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<Proposal, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/gov/members/proposals/{proposalId}": {
      "get": {
        "operationId": "ConsortiumGov_GetProposal",
        "description": "Returns a summary of a single proposed change to the service.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of proposed actions and merkle root of store at proposal creation. Unlike other IDs, this is generated on the service and will not be known in advance.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/members/proposals/{proposalId}/actions": {
      "get": {
        "operationId": "ConsortiumGov_GetActions",
        "description": "Returns actions contained in a proposal.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of proposed actions and merkle root of store at proposal creation. Unlike other IDs, this is generated on the service and will not be known in advance.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/ProposalActions"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/members/proposals/{proposalId}/ballots/{memberId}:submit": {
      "post": {
        "operationId": "ConsortiumGov_Submit",
        "description": "Submit an executable ballot for a specific proposal. This may be as simple as `return true` to vote in favour, or contain reads from the KV and conditions on the proposal contents.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of proposed actions and merkle root of store at proposal creation. Unlike other IDs, this is generated on the service and will not be known in advance.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/CoseSignature.body"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cose"
        ]
      }
    },
    "/gov/members/proposals/{proposalId}/ballots/{memberId}": {
      "get": {
        "operationId": "ConsortiumGov_GetBallot",
        "description": "Returns a member's submitted ballot.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of proposed actions and merkle root of store at proposal creation. Unlike other IDs, this is generated on the service and will not be known in advance.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/Ballot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/members/proposals:propose": {
      "post": {
        "operationId": "ConsortiumGov_Propose",
        "description": "Submit a proposed change to the service. This will be assigned an ID by the service. Submitting the same signature (including signed COSE headers such as created_at) multiple times will be handled idempotently, returning a single created proposal (or an error if it is no longer available). Any change to the request body will be treated as a new, separate proposal.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CoseSignature.body"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cose"
        ]
      }
    },
    "/gov/members/proposals:withdraw": {
      "post": {
        "operationId": "ConsortiumGov_Withdraw",
        "description": "Withdraw an existing proposal. Only the original proposer is permitted to withdraw.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "$ref": "#/parameters/CoseSignature.body"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cose"
        ]
      }
    },
    "/gov/members/state-digests/{memberId}:update": {
      "post": {
        "operationId": "ConsortiumGov_UpdateStateDigest",
        "description": "Request that this member's stateDigest is updated to a fresher value. Only this member may update their own stateDigest. Returns the refreshed value.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/CoseSignature.body"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/StateDigest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cose"
        ]
      }
    },
    "/gov/members/state-digests/{memberId}:ack": {
      "post": {
        "operationId": "ConsortiumGov_AckStateDigest",
        "description": "Submit a signed acknowledgement of a recent digest of the service status, to transition the member to Active.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          },
          {
            "$ref": "#/parameters/CoseSignature.body"
          }
        ],
        "responses": {
          "204": {
            "description": "There is no content to send for this request, but the headers may be useful. ",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "consumes": [
          "application/cose"
        ]
      }
    },
    "/gov/members/state-digests/{memberId}": {
      "get": {
        "operationId": "ConsortiumGov_GetStateDigest",
        "description": "Get the stateDigest assigned to the given member, which that member must sign to become active.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
            "type": "string",
            "format": "hex",
            "maxLength": 64
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "headers": {
              "x-ms-ccf-transaction-id": {
                "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
                "type": "string",
                "pattern": "^[0-9]+\\.[0-9]+$"
              }
            },
            "schema": {
              "$ref": "#/definitions/StateDigest"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/service/transactions/{transactionId}/status": {
      "get": {
        "operationId": "ServiceInfo_GetTransactionStatus",
        "description": "Get status of transaction by transaction ID, to determine whether it has committed.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "transactionId",
            "in": "path",
            "required": true,
            "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
            "type": "string",
            "pattern": "^[0-9]+\\.[0-9]+$"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/service/transactions/commit": {
      "get": {
        "operationId": "ServiceInfo_GetCommit",
        "description": "Get latest committed transaction.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Action": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of action to perform. This should match an action defined in the service's constitution, so that it can be invoked by the `apply` function of the constitution if the proposal is accepted."
        },
        "args": {
          "description": "Arguments to modify the behaviour of this action. The schema is determined by the action implementation, and should be validated by a `validate` call in the constitution."
        }
      },
      "description": "A single step in a proposed change to the service.",
      "required": [
        "name",
        "args"
      ]
    },
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "Ballot": {
      "type": "object",
      "properties": {
        "memberId": {
          "$ref": "#/definitions/memberId",
          "description": "ID of CCF member who signed and submitted this ballot.",
          "readOnly": true
        },
        "ballot": {
          "type": "string",
          "description": "The script to execute, returning the voter's support of this proposal.",
          "x-ms-mutability": [
            "create"
          ]
        }
      },
      "description": "The source script of an executable vote from a member, regarding a proposed change to the service.",
      "required": [
        "memberId",
        "ballot"
      ]
    },
    "EncryptedRecoveryShare": {
      "type": "object",
      "properties": {
        "memberId": {
          "$ref": "#/definitions/memberId",
          "description": "ID of CCF member who this recovery share belongs to.",
          "readOnly": true
        }
      },
      "description": "TODO",
      "required": [
        "memberId"
      ]
    },
    "FailureInfo": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string",
          "description": "Error message describing reason for failure."
        },
        "trace": {
          "type": "string",
          "description": "Callstack showing where failure occurred, if available."
        }
      },
      "description": "Description of why governance execution failed.",
      "required": [
        "reason"
      ]
    },
    "MemberVotes": {
      "type": "object",
      "additionalProperties": {
        "type": "boolean"
      },
      "description": "Each key is a memberId, and the corresponding value is the result of their ballot."
    },
    "Proposal": {
      "type": "object",
      "properties": {
        "proposalId": {
          "$ref": "#/definitions/proposalId",
          "description": "Unique ID assigned to this proposal at its submission, by the service.",
          "readOnly": true
        },
        "proposerId": {
          "$ref": "#/definitions/memberId",
          "description": "ID of CCF member who signed and created this proposal.",
          "readOnly": true
        },
        "proposalState": {
          "$ref": "#/definitions/ProposalState",
          "description": "Current state of this proposal."
        },
        "ballotCount": {
          "type": "integer",
          "format": "uint64",
          "description": "Count of how many ballots have been submitted for this proposal."
        },
        "finalVotes": {
          "$ref": "#/definitions/MemberVotes",
          "description": "If a proposal is not open, then this contains the result of each ballot when the proposal transitioned from open."
        },
        "voteFailures": {
          "$ref": "#/definitions/VoteFailures",
          "description": "This will be populated with a description of any ballots which failed to execute."
        },
        "failure": {
          "$ref": "#/definitions/FailureInfo",
          "description": "If proposalState is Failure, then this will describe why the proposal failed."
        }
      },
      "description": "Description of a proposed change to the service.",
      "required": [
        "proposalId",
        "proposerId",
        "proposalState",
        "ballotCount"
      ]
    },
    "ProposalActions": {
      "type": "object",
      "properties": {
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Action"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Action[]",
          "description": "A list of actions to apply. Each action is considered, in order, for both proposal and execution of the proposal. All actions are validated and, if the proposal is accepted, applied atomically."
        }
      },
      "description": "The actions contained in a proposal, describing the proposal's changes.",
      "required": [
        "actions"
      ]
    },
    "ProposalState": {
      "type": "string",
      "description": "Possible states for a proposal.",
      "enum": [
        "Open",
        "Accepted",
        "Withdrawn",
        "Rejected",
        "Failed",
        "Dropped"
      ],
      "x-ms-enum": {
        "name": "ProposalState",
        "modelAsString": true,
        "values": [
          {
            "name": "Open",
            "value": "Open",
            "description": "Proposal is active and can be voted on."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Proposal passed a successful vote and was enacted."
          },
          {
            "name": "Withdrawn",
            "value": "Withdrawn",
            "description": "Proposal was removed by proposing member. Will never be enacted."
          },
          {
            "name": "Rejected",
            "value": "Rejected",
            "description": "Proposal was rejected by vote. Will never be enacted."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Proposal passed a successful vote, but its proposed actions failed. Will never be enacted."
          },
          {
            "name": "Dropped",
            "value": "Dropped",
            "description": "Proposal was open when its semantics were potentially changed (code or constitution were modified), so it was automatically invalidated."
          }
        ]
      }
    },
    "RecoveryResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Human-readable description of current recovery progress."
        },
        "submittedCount": {
          "type": "integer",
          "format": "uint64",
          "description": "Count of how many accepted member shares have been submitted, including the current request."
        },
        "recoveryThreshold": {
          "type": "integer",
          "format": "uint64",
          "description": "Count of how many member shares are required to initiate the end-of-recovery procedure."
        }
      },
      "description": "Response to a submitted recovery share.",
      "required": [
        "message",
        "submittedCount",
        "recoveryThreshold"
      ]
    },
    "RecoveryShare": {
      "type": "object",
      "properties": {
        "share": {
          "type": "string",
          "description": "TODO"
        }
      },
      "description": "TODO",
      "required": [
        "share"
      ]
    },
    "StateDigest": {
      "type": "object",
      "properties": {
        "memberId": {
          "$ref": "#/definitions/memberId",
          "description": "Identifier for member this stateDigest applies to.",
          "readOnly": true
        },
        "stateDigest": {
          "type": "string",
          "description": "Hex-encoding of SHA-256 hash of the root of the service's merkle tree. This should be signed by a new member and submitted as an ACK to mark that member as Active.",
          "format": "hex",
          "maxLength": 64
        }
      },
      "description": "A compact summary of the service's state up to a certain point in time, updated and signed by members to indicate their participation in and approval of the service.",
      "required": [
        "memberId",
        "stateDigest"
      ]
    },
    "Transaction": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/TransactionStatus",
          "description": "Status of this transaction."
        },
        "transactionId": {
          "$ref": "#/definitions/transactionId",
          "description": "Identifier of the requested transaction.",
          "readOnly": true
        }
      },
      "description": "Description of a transaction's current state.",
      "required": [
        "status",
        "transactionId"
      ]
    },
    "TransactionStatus": {
      "type": "string",
      "description": "Possible states for a CCF transaction. See docs for details: https://microsoft.github.io/CCF/main/use_apps/verify_tx.html#checking-for-commit",
      "enum": [
        "Unknown",
        "Pending",
        "Committed",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "TransactionStatus",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "0.0.1-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true
      }
    },
    "VoteFailures": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/FailureInfo"
      },
      "description": "Each key is a memberId, and the corresponding value explains why execution of their ballot failed."
    },
    "memberId": {
      "type": "string",
      "description": "Hex encoding of SHA-256 of a member certificate's fingerprint.",
      "format": "hex",
      "maxLength": 64
    },
    "proposalId": {
      "type": "string",
      "description": "Hex encoding of SHA-256 of proposed actions and merkle root of store at proposal creation. Unlike other IDs, this is generated on the service and will not be known in advance.",
      "format": "hex",
      "maxLength": 64
    },
    "transactionId": {
      "type": "string",
      "description": "Uniquely identifies an atomic transaction within a CCF service. Composed of a term number and sequence number. Sequence numbers increase monotonically, apart from during elections where the service may reuse an existing sequence number. Each election will result in a new, higher term number being used for the conflicting and future sequence numbers.",
      "pattern": "^[0-9]+\\.[0-9]+$"
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "CoseSignature.body": {
      "name": "body",
      "in": "body",
      "required": true,
      "description": "A raw CoseSign1 signature. See CCF docs for required headers and body schema: https://microsoft.github.io/CCF/main/use_apps/issue_commands.html#cose-sign1",
      "schema": {
        "type": "string",
        "format": "binary"
      },
      "x-ms-parameter-location": "method"
    }
  }
}
