{
  "swagger": "2.0",
  "info": {
    "title": "Managed CCF Governance",
    "version": "0.0.1-preview",
    "x-typespec-generated": [
      {
        "emitter": "@azure-tools/typespec-autorest"
      }
    ]
  },
  "schemes": [
    "https"
  ],
  "produces": [
    "application/json"
  ],
  "consumes": [
    "application/json"
  ],
  "tags": [],
  "paths": {
    "/gov/commit": {
      "get": {
        "operationId": "Gov_GetCommit",
        "description": "Get current committed sequence number. May be used to poll for a specific transaction to be committed, or to verify that all nodes are in-sync.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/CommitInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/proposals": {
      "post": {
        "operationId": "Gov_CreateProposal",
        "description": "TODO",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "resource",
            "in": "body",
            "required": true,
            "description": "The resource instance.",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The request has succeeded and a new resource has been created as a result.",
            "headers": {
              "Location": {
                "description": "The location of an instance of Proposal",
                "type": "string",
                "format": "uri"
              }
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      },
      "get": {
        "operationId": "Gov_ListOpenProposals",
        "description": "TODO",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Proposal"
                  },
                  "x-ms-identifiers": [],
                  "x-typespec-name": "Proposal[]",
                  "description": "The Proposal items on this page"
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items",
                  "x-typespec-name": "TypeSpec.Rest.ResourceLocation"
                }
              },
              "description": "Paged collection of Proposal items",
              "required": [
                "value"
              ],
              "x-typespec-name": "Azure.Core.Foundations.CustomPage<Proposal, Azure.Core.(anonymous model)>"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        },
        "x-ms-pageable": {
          "nextLinkName": "nextLink"
        }
      }
    },
    "/gov/proposals/{proposalId}": {
      "get": {
        "operationId": "Gov_GetProposal",
        "description": "TODO",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "description": "TODO",
            "pattern": "TODO",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/proposals/{proposalId}/ballots/{memberId}": {
      "get": {
        "operationId": "Gov_GetBallot",
        "description": "TODO",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "proposalId",
            "in": "path",
            "required": true,
            "description": "TODO",
            "pattern": "TODO",
            "type": "string"
          },
          {
            "name": "memberId",
            "in": "path",
            "required": true,
            "description": "TODO",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/Ballot"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    },
    "/gov/tx": {
      "get": {
        "operationId": "Gov_GetTransactionInfo",
        "description": "Fetch status of transaction by transaction ID, to determine whether it has committed.",
        "parameters": [
          {
            "$ref": "#/parameters/Azure.Core.Foundations.ApiVersionParameter"
          },
          {
            "name": "transactionId",
            "in": "query",
            "required": true,
            "description": "TODO",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "The request has succeeded.",
            "schema": {
              "$ref": "#/definitions/TxInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "headers": {
              "x-ms-error-code": {
                "description": "String error code indicating what went wrong.",
                "type": "string"
              }
            },
            "schema": {
              "$ref": "#/definitions/Azure.Core.Foundations.ErrorResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Azure.Core.Foundations.Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "message": {
          "type": "string",
          "description": "A human-readable representation of the error."
        },
        "target": {
          "type": "string",
          "description": "The target of the error."
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Azure.Core.Foundations.Error"
          },
          "x-ms-identifiers": [],
          "x-typespec-name": "Azure.Core.Foundations.Error[]",
          "description": "An array of details about specific errors that led to this reported error."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "An object containing more specific information than the current object about the error."
        }
      },
      "description": "The error object.",
      "required": [
        "code",
        "message",
        "details"
      ]
    },
    "Azure.Core.Foundations.ErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "$ref": "#/definitions/Azure.Core.Foundations.Error",
          "description": "The error object."
        }
      },
      "description": "A response containing error details.",
      "required": [
        "error"
      ]
    },
    "Azure.Core.Foundations.InnerError": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "One of a server-defined set of error codes."
        },
        "innererror": {
          "$ref": "#/definitions/Azure.Core.Foundations.InnerError",
          "description": "Inner error."
        }
      },
      "description": "An object containing more specific information about the error. As per Microsoft One API guidelines - https://github.com/Microsoft/api-guidelines/blob/vNext/Guidelines.md#7102-error-condition-responses.",
      "required": [
        "code"
      ]
    },
    "Ballot": {
      "type": "object",
      "properties": {
        "memberId": {
          "type": "string",
          "description": "TODO",
          "readOnly": true
        }
      },
      "description": "TODO",
      "required": [
        "memberId"
      ]
    },
    "CommitInfo": {
      "type": "object",
      "properties": {
        "transactionId": {
          "type": "string",
          "description": "Identifier of latest committed transaction.",
          "pattern": "^[0-9]+\\.[0-9]+$",
          "readOnly": true
        }
      },
      "description": "TODO",
      "required": [
        "transactionId"
      ]
    },
    "Proposal": {
      "type": "object",
      "properties": {
        "proposalId": {
          "type": "string",
          "description": "TODO",
          "pattern": "TODO",
          "readOnly": true
        },
        "proposerId": {
          "type": "string",
          "description": "TODO",
          "readOnly": true
        }
      },
      "description": "TODO",
      "required": [
        "proposalId",
        "proposerId"
      ]
    },
    "TxInfo": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "#/definitions/TxStatus",
          "description": "Status of this transaction"
        },
        "transactionId": {
          "type": "string",
          "description": "Identifier of this transaction, containing view and sequence number.",
          "pattern": "^[0-9]+\\.[0-9]+$",
          "readOnly": true
        }
      },
      "description": "Description of a transaction",
      "required": [
        "status",
        "transactionId"
      ]
    },
    "TxStatus": {
      "type": "string",
      "description": "Possible states for a CCF transaction. See docs for details: https://microsoft.github.io/CCF/main/use_apps/verify_tx.html#checking-for-commit",
      "enum": [
        "Unknown",
        "Pending",
        "Committed",
        "Invalid"
      ],
      "x-ms-enum": {
        "name": "TxStatus",
        "modelAsString": true
      }
    },
    "Versions": {
      "type": "string",
      "enum": [
        "0.0.1-preview"
      ],
      "x-ms-enum": {
        "name": "Versions",
        "modelAsString": true
      }
    }
  },
  "parameters": {
    "Azure.Core.Foundations.ApiVersionParameter": {
      "name": "api-version",
      "in": "query",
      "required": true,
      "description": "The API version to use for this operation.",
      "x-ms-client-name": "apiVersion",
      "minLength": 1,
      "type": "string",
      "x-ms-parameter-location": "method"
    }
  }
}
