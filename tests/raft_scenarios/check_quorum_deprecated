nodes,0,1,2,3
connect,0,1
connect,0,2
connect,0,3
connect,1,2
connect,1,3
connect,2,3

# Node 0 starts first, and wins the first election
periodic_one,0,110
dispatch_all

periodic_all,10
dispatch_all

# An initial entry is written and successfully replicated
replicate,1,helloworld
emit_signature,1

periodic_all,10
dispatch_all

periodic_all,10
dispatch_all

state_all
assert_state_sync

# Disconnect primary 0 from a minority of backups [1].
# Primary 0 should remain primary.

disconnect,0,1

# 0 sends AE and receives ACKs from [2,3]
periodic_all,10
dispatch_all

periodic_one,0,50
dispatch_all

# 0 has now not received an ACK from 1 for longer than election timeout 100
periodic_one,0,50
dispatch_all

state_all
assert_is_primary,0
assert_is_backup,1
assert_is_backup,2
assert_is_backup,3

# Now disconnect primary 0 from another backup 1. 
# Majority of backups [1,2] is disconnected and primary 0 should step down.

disconnect,0,2

assert_is_primary,0

periodic_all,10
dispatch_all

periodic_one,0,50
dispatch_all

assert_is_primary,0

# 0 has now not received an ACK from [1,2] for longer than election timeout 100
periodic_one,0,50

# Node 0 has stepped down as backup (check quorum)
state_all
assert_is_backup,0
assert_is_backup,1
assert_is_backup,2
assert_is_backup,3

# Eventually, the partition is lifted and a new leader is elected.
# In this case, we check that node 0 can be re-elected.

reconnect,0,1
reconnect,0,2
dispatch_all

periodic_one,0,100
dispatch_all

assert_is_primary,0

state_all