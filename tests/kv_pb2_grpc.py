# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import kv_pb2 as kv__pb2


class KVStub(object):
    """Service exposed by a CCF node for executors to interact with KV state.
    Communication with this service must be over TLS, authorising as a client
    cert that has previously been accepted by the ExecutorRegistration service.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartTx = channel.unary_stream(
                '/ccf.KV/StartTx',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=kv__pb2.RequestDescription.FromString,
                )
        self.EndTx = channel.unary_unary(
                '/ccf.KV/EndTx',
                request_serializer=kv__pb2.ResponseDescription.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Get = channel.unary_unary(
                '/ccf.KV/Get',
                request_serializer=kv__pb2.KVKey.SerializeToString,
                response_deserializer=kv__pb2.KVValue.FromString,
                )
        self.Has = channel.unary_unary(
                '/ccf.KV/Has',
                request_serializer=kv__pb2.KVKey.SerializeToString,
                response_deserializer=kv__pb2.KVHasResult.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/ccf.KV/GetVersion',
                request_serializer=kv__pb2.KVKey.SerializeToString,
                response_deserializer=kv__pb2.KVVersion.FromString,
                )
        self.Put = channel.unary_unary(
                '/ccf.KV/Put',
                request_serializer=kv__pb2.KVKeyValue.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.Delete = channel.unary_unary(
                '/ccf.KV/Delete',
                request_serializer=kv__pb2.KVKey.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.GetAll = channel.unary_stream(
                '/ccf.KV/GetAll',
                request_serializer=kv__pb2.KVTable.SerializeToString,
                response_deserializer=kv__pb2.KVKeyValue.FromString,
                )


class KVServicer(object):
    """Service exposed by a CCF node for executors to interact with KV state.
    Communication with this service must be over TLS, authorising as a client
    cert that has previously been accepted by the ExecutorRegistration service.
    """

    def StartTx(self, request, context):
        """Indicate to node that this executor is ready for a new request.
        Returns description of a client request, to be executed.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EndTx(self, request, context):
        """Indicate that this executor has completed execution of the previous Tx.
        Contains description of response which should be forwarded to user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Read a single key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Has(self, request, context):
        """Test a single key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Read version of a single key
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Put(self, request, context):
        """Write a single key-value pair
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Delete(self, request, context):
        """Remove a single key-value pair
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAll(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KVServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartTx': grpc.unary_stream_rpc_method_handler(
                    servicer.StartTx,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=kv__pb2.RequestDescription.SerializeToString,
            ),
            'EndTx': grpc.unary_unary_rpc_method_handler(
                    servicer.EndTx,
                    request_deserializer=kv__pb2.ResponseDescription.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=kv__pb2.KVKey.FromString,
                    response_serializer=kv__pb2.KVValue.SerializeToString,
            ),
            'Has': grpc.unary_unary_rpc_method_handler(
                    servicer.Has,
                    request_deserializer=kv__pb2.KVKey.FromString,
                    response_serializer=kv__pb2.KVHasResult.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=kv__pb2.KVKey.FromString,
                    response_serializer=kv__pb2.KVVersion.SerializeToString,
            ),
            'Put': grpc.unary_unary_rpc_method_handler(
                    servicer.Put,
                    request_deserializer=kv__pb2.KVKeyValue.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Delete': grpc.unary_unary_rpc_method_handler(
                    servicer.Delete,
                    request_deserializer=kv__pb2.KVKey.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetAll': grpc.unary_stream_rpc_method_handler(
                    servicer.GetAll,
                    request_deserializer=kv__pb2.KVTable.FromString,
                    response_serializer=kv__pb2.KVKeyValue.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ccf.KV', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class KV(object):
    """Service exposed by a CCF node for executors to interact with KV state.
    Communication with this service must be over TLS, authorising as a client
    cert that has previously been accepted by the ExecutorRegistration service.
    """

    @staticmethod
    def StartTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ccf.KV/StartTx',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            kv__pb2.RequestDescription.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EndTx(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ccf.KV/EndTx',
            kv__pb2.ResponseDescription.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ccf.KV/Get',
            kv__pb2.KVKey.SerializeToString,
            kv__pb2.KVValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Has(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ccf.KV/Has',
            kv__pb2.KVKey.SerializeToString,
            kv__pb2.KVHasResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ccf.KV/GetVersion',
            kv__pb2.KVKey.SerializeToString,
            kv__pb2.KVVersion.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Put(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ccf.KV/Put',
            kv__pb2.KVKeyValue.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Delete(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ccf.KV/Delete',
            kv__pb2.KVKey.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAll(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ccf.KV/GetAll',
            kv__pb2.KVTable.SerializeToString,
            kv__pb2.KVKeyValue.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
