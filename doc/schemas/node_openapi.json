{
  "components": {
    "schemas": {
      "Authority": {
        "enum": [
          "Node",
          "Service"
        ],
        "type": "string"
      },
      "CodeStatus": {
        "enum": [
          "AllowedToJoin"
        ],
        "type": "string"
      },
      "Configuration": {
        "properties": {
          "bft_offset": {
            "$ref": "#/components/schemas/uint32"
          },
          "idx": {
            "$ref": "#/components/schemas/uint64"
          },
          "nodes": {
            "$ref": "#/components/schemas/NodeId_to_Configuration__NodeInfo"
          },
          "rid": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "idx",
          "nodes",
          "rid"
        ],
        "type": "object"
      },
      "Configuration__NodeInfo": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "address"
        ],
        "type": "object"
      },
      "Configuration_array": {
        "items": {
          "$ref": "#/components/schemas/Configuration"
        },
        "type": "array"
      },
      "ConsensusConfigDetails": {
        "properties": {
          "details": {
            "$ref": "#/components/schemas/ConsensusDetails"
          }
        },
        "required": [
          "details"
        ],
        "type": "object"
      },
      "ConsensusDetails": {
        "properties": {
          "acks": {
            "$ref": "#/components/schemas/NodeId_to_uint64"
          },
          "configs": {
            "$ref": "#/components/schemas/Configuration_array"
          },
          "current_view": {
            "$ref": "#/components/schemas/uint64"
          },
          "leadership_state": {
            "$ref": "#/components/schemas/LeadershipState"
          },
          "learners": {
            "$ref": "#/components/schemas/NodeId_to_uint64"
          },
          "membership_state": {
            "$ref": "#/components/schemas/MembershipState"
          },
          "primary_id": {
            "$ref": "#/components/schemas/NodeId"
          },
          "reconfiguration_type": {
            "$ref": "#/components/schemas/ReconfigurationType"
          },
          "retirement_phase": {
            "$ref": "#/components/schemas/RetirementPhase"
          },
          "ticking": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        "required": [
          "configs",
          "acks",
          "membership_state",
          "primary_id",
          "current_view",
          "ticking"
        ],
        "type": "object"
      },
      "ConsensusNodeConfig": {
        "properties": {
          "address": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "address"
        ],
        "type": "object"
      },
      "ConsensusType": {
        "enum": [
          "CFT",
          "BFT"
        ],
        "type": "string"
      },
      "Endorsement": {
        "properties": {
          "authority": {
            "$ref": "#/components/schemas/Authority"
          }
        },
        "required": [
          "authority"
        ],
        "type": "object"
      },
      "EndpointMetrics": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/EndpointMetricsEntry_array"
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object"
      },
      "EndpointMetricsEntry": {
        "properties": {
          "calls": {
            "$ref": "#/components/schemas/uint64"
          },
          "errors": {
            "$ref": "#/components/schemas/uint64"
          },
          "failures": {
            "$ref": "#/components/schemas/uint64"
          },
          "method": {
            "$ref": "#/components/schemas/string"
          },
          "path": {
            "$ref": "#/components/schemas/string"
          },
          "retries": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "path",
          "method",
          "calls",
          "errors",
          "failures",
          "retries"
        ],
        "type": "object"
      },
      "EndpointMetricsEntry_array": {
        "items": {
          "$ref": "#/components/schemas/EndpointMetricsEntry"
        },
        "type": "array"
      },
      "GetCode__Out": {
        "properties": {
          "versions": {
            "$ref": "#/components/schemas/GetCode__Version_array"
          }
        },
        "required": [
          "versions"
        ],
        "type": "object"
      },
      "GetCode__Version": {
        "properties": {
          "digest": {
            "$ref": "#/components/schemas/string"
          },
          "status": {
            "$ref": "#/components/schemas/CodeStatus"
          }
        },
        "required": [
          "digest",
          "status"
        ],
        "type": "object"
      },
      "GetCode__Version_array": {
        "items": {
          "$ref": "#/components/schemas/GetCode__Version"
        },
        "type": "array"
      },
      "GetCommit__Out": {
        "properties": {
          "transaction_id": {
            "$ref": "#/components/schemas/TransactionId"
          }
        },
        "required": [
          "transaction_id"
        ],
        "type": "object"
      },
      "GetNetworkInfo__Out": {
        "properties": {
          "current_view": {
            "$ref": "#/components/schemas/uint64"
          },
          "primary_id": {
            "$ref": "#/components/schemas/NodeId"
          },
          "service_certificate": {
            "$ref": "#/components/schemas/Pem"
          },
          "service_status": {
            "$ref": "#/components/schemas/ServiceStatus"
          }
        },
        "required": [
          "service_status",
          "service_certificate",
          "current_view",
          "primary_id"
        ],
        "type": "object"
      },
      "GetNode__NodeInfo": {
        "properties": {
          "last_written": {
            "$ref": "#/components/schemas/uint64"
          },
          "node_data": {
            "$ref": "#/components/schemas/json"
          },
          "node_id": {
            "$ref": "#/components/schemas/NodeId"
          },
          "primary": {
            "$ref": "#/components/schemas/boolean"
          },
          "rpc_interfaces": {
            "$ref": "#/components/schemas/string_to_NodeInfoNetwork_v2__NetInterface"
          },
          "status": {
            "$ref": "#/components/schemas/NodeStatus"
          }
        },
        "required": [
          "node_id",
          "status",
          "primary",
          "rpc_interfaces",
          "node_data",
          "last_written"
        ],
        "type": "object"
      },
      "GetNode__NodeInfo_array": {
        "items": {
          "$ref": "#/components/schemas/GetNode__NodeInfo"
        },
        "type": "array"
      },
      "GetNodes__Out": {
        "properties": {
          "nodes": {
            "$ref": "#/components/schemas/GetNode__NodeInfo_array"
          }
        },
        "required": [
          "nodes"
        ],
        "type": "object"
      },
      "GetQuotes__Out": {
        "properties": {
          "quotes": {
            "$ref": "#/components/schemas/Quote_array"
          }
        },
        "required": [
          "quotes"
        ],
        "type": "object"
      },
      "GetState__Out": {
        "properties": {
          "last_recovered_seqno": {
            "$ref": "#/components/schemas/uint64"
          },
          "last_signed_seqno": {
            "$ref": "#/components/schemas/uint64"
          },
          "node_id": {
            "$ref": "#/components/schemas/NodeId"
          },
          "recovery_target_seqno": {
            "$ref": "#/components/schemas/uint64"
          },
          "startup_seqno": {
            "$ref": "#/components/schemas/uint64"
          },
          "state": {
            "$ref": "#/components/schemas/ccf__NodeStartupState"
          }
        },
        "required": [
          "node_id",
          "state",
          "last_signed_seqno",
          "startup_seqno"
        ],
        "type": "object"
      },
      "GetTxStatus__Out": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TxStatus"
          },
          "transaction_id": {
            "$ref": "#/components/schemas/TransactionId"
          }
        },
        "required": [
          "transaction_id",
          "status"
        ],
        "type": "object"
      },
      "GetVersion__Out": {
        "properties": {
          "ccf_version": {
            "$ref": "#/components/schemas/string"
          },
          "quickjs_version": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "ccf_version",
          "quickjs_version"
        ],
        "type": "object"
      },
      "JWTMetrics": {
        "properties": {
          "attempts": {
            "$ref": "#/components/schemas/uint64"
          },
          "successes": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "attempts",
          "successes"
        ],
        "type": "object"
      },
      "JavaScriptMetrics": {
        "properties": {
          "bytecode_size": {
            "$ref": "#/components/schemas/uint64"
          },
          "bytecode_used": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        "required": [
          "bytecode_size",
          "bytecode_used"
        ],
        "type": "object"
      },
      "LeadershipState": {
        "enum": [
          "Leader",
          "Follower",
          "Candidate"
        ],
        "type": "string"
      },
      "MembershipState": {
        "enum": [
          "Learner",
          "Active",
          "RetirementInitiated",
          "Retired"
        ],
        "type": "string"
      },
      "MemoryUsage__Out": {
        "properties": {
          "current_allocated_heap_size": {
            "$ref": "#/components/schemas/uint64"
          },
          "max_total_heap_size": {
            "$ref": "#/components/schemas/uint64"
          },
          "peak_allocated_heap_size": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "max_total_heap_size",
          "current_allocated_heap_size",
          "peak_allocated_heap_size"
        ],
        "type": "object"
      },
      "NodeId": {
        "format": "hex",
        "pattern": "^[a-f0-9]{64}$",
        "type": "string"
      },
      "NodeId_to_Configuration__NodeInfo": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Configuration__NodeInfo"
        },
        "type": "object"
      },
      "NodeId_to_uint64": {
        "additionalProperties": {
          "$ref": "#/components/schemas/uint64"
        },
        "type": "object"
      },
      "NodeInfoNetwork_v2__NetInterface": {
        "properties": {
          "bind_address": {
            "$ref": "#/components/schemas/string"
          },
          "endorsement": {
            "$ref": "#/components/schemas/Endorsement"
          },
          "max_open_sessions_hard": {
            "$ref": "#/components/schemas/uint64"
          },
          "max_open_sessions_soft": {
            "$ref": "#/components/schemas/uint64"
          },
          "published_address": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "bind_address"
        ],
        "type": "object"
      },
      "NodeMetrics": {
        "properties": {
          "sessions": {
            "$ref": "#/components/schemas/SessionMetrics"
          }
        },
        "required": [
          "sessions"
        ],
        "type": "object"
      },
      "NodeStatus": {
        "enum": [
          "Pending",
          "Trusted",
          "Retired",
          "Learner",
          "Retiring"
        ],
        "type": "string"
      },
      "Pem": {
        "type": "string"
      },
      "Quote": {
        "properties": {
          "endorsements": {
            "$ref": "#/components/schemas/base64string"
          },
          "format": {
            "$ref": "#/components/schemas/QuoteFormat"
          },
          "mrenclave": {
            "$ref": "#/components/schemas/string"
          },
          "node_id": {
            "$ref": "#/components/schemas/NodeId"
          },
          "raw": {
            "$ref": "#/components/schemas/base64string"
          }
        },
        "required": [
          "node_id",
          "raw",
          "endorsements",
          "format"
        ],
        "type": "object"
      },
      "QuoteFormat": {
        "enum": [
          "OE_SGX_v1"
        ],
        "type": "string"
      },
      "Quote_array": {
        "items": {
          "$ref": "#/components/schemas/Quote"
        },
        "type": "array"
      },
      "Receipt": {
        "properties": {
          "cert": {
            "$ref": "#/components/schemas/string"
          },
          "leaf": {
            "$ref": "#/components/schemas/string"
          },
          "leaf_components": {
            "$ref": "#/components/schemas/Receipt__LeafComponents"
          },
          "node_id": {
            "$ref": "#/components/schemas/NodeId"
          },
          "proof": {
            "$ref": "#/components/schemas/Receipt__Element_array"
          },
          "root": {
            "$ref": "#/components/schemas/string"
          },
          "signature": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "signature",
          "proof",
          "node_id"
        ],
        "type": "object"
      },
      "Receipt__Element": {
        "properties": {
          "left": {
            "$ref": "#/components/schemas/string"
          },
          "right": {
            "$ref": "#/components/schemas/string"
          }
        },
        "type": "object"
      },
      "Receipt__Element_array": {
        "items": {
          "$ref": "#/components/schemas/Receipt__Element"
        },
        "type": "array"
      },
      "Receipt__LeafComponents": {
        "properties": {
          "claims_digest": {
            "$ref": "#/components/schemas/string"
          },
          "commit_evidence": {
            "$ref": "#/components/schemas/string"
          },
          "write_set_digest": {
            "$ref": "#/components/schemas/string"
          }
        },
        "type": "object"
      },
      "ReconfigurationType": {
        "enum": [
          "OneTransaction",
          "TwoTransaction"
        ],
        "type": "string"
      },
      "RetirementPhase": {
        "enum": [
          "Committed",
          "Ordered",
          "Signed",
          "Completed"
        ],
        "type": "string"
      },
      "ServiceConfiguration": {
        "properties": {
          "consensus": {
            "$ref": "#/components/schemas/ConsensusType"
          },
          "maximum_node_certificate_validity_days": {
            "$ref": "#/components/schemas/uint64"
          },
          "maximum_service_certificate_validity_days": {
            "$ref": "#/components/schemas/uint64"
          },
          "reconfiguration_type": {
            "$ref": "#/components/schemas/ReconfigurationType"
          },
          "recovery_threshold": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "recovery_threshold"
        ],
        "type": "object"
      },
      "ServiceStatus": {
        "enum": [
          "Opening",
          "Open",
          "WaitingForRecoveryShares",
          "Recovering"
        ],
        "type": "string"
      },
      "SessionMetrics": {
        "properties": {
          "active": {
            "$ref": "#/components/schemas/uint64"
          },
          "interfaces": {
            "$ref": "#/components/schemas/string_to_SessionMetrics__PerInterface"
          },
          "peak": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "active",
          "peak",
          "interfaces"
        ],
        "type": "object"
      },
      "SessionMetrics__Errors": {
        "properties": {
          "parsing": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "parsing"
        ],
        "type": "object"
      },
      "SessionMetrics__PerInterface": {
        "properties": {
          "active": {
            "$ref": "#/components/schemas/uint64"
          },
          "errors": {
            "$ref": "#/components/schemas/SessionMetrics__Errors"
          },
          "hard_cap": {
            "$ref": "#/components/schemas/uint64"
          },
          "peak": {
            "$ref": "#/components/schemas/uint64"
          },
          "soft_cap": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "active",
          "peak",
          "soft_cap",
          "hard_cap",
          "errors"
        ],
        "type": "object"
      },
      "TransactionId": {
        "pattern": "^[0-9]+\\.[0-9]+$",
        "type": "string"
      },
      "TxStatus": {
        "enum": [
          "Unknown",
          "Pending",
          "Committed",
          "Invalid"
        ],
        "type": "string"
      },
      "base64string": {
        "format": "base64",
        "type": "string"
      },
      "boolean": {
        "type": "boolean"
      },
      "ccf__NodeStartupState": {
        "enum": [
          "Uninitialized",
          "Initialized",
          "Pending",
          "PartOfPublicNetwork",
          "PartOfNetwork",
          "ReadingPublicLedger",
          "ReadingPrivateLedger",
          "VerifyingSnapshot"
        ],
        "type": "string"
      },
      "json": {},
      "string": {
        "type": "string"
      },
      "string_to_ConsensusNodeConfig": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ConsensusNodeConfig"
        },
        "type": "object"
      },
      "string_to_NodeInfoNetwork_v2__NetInterface": {
        "additionalProperties": {
          "$ref": "#/components/schemas/NodeInfoNetwork_v2__NetInterface"
        },
        "type": "object"
      },
      "string_to_SessionMetrics__PerInterface": {
        "additionalProperties": {
          "$ref": "#/components/schemas/SessionMetrics__PerInterface"
        },
        "type": "object"
      },
      "uint32": {
        "maximum": 4294967295,
        "minimum": 0,
        "type": "integer"
      },
      "uint64": {
        "maximum": 18446744073709551615,
        "minimum": 0,
        "type": "integer"
      }
    }
  },
  "info": {
    "description": "This API provides public, uncredentialed access to service and node state.",
    "title": "CCF Public Node API",
    "version": "2.16.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/node/api": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/api/metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointMetrics"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/code": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCode__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/commit": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommit__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/config": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_ConsensusNodeConfig"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/consensus": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsensusConfigDetails"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/js_metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JavaScriptMetrics"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/jwt_metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JWTMetrics"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/local_tx": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "transaction_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxStatus__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/memory": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemoryUsage__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeMetrics"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/network": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNetworkInfo__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/network/nodes": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "host",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/string"
            }
          },
          {
            "in": "query",
            "name": "port",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/string"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNodes__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/network/nodes/primary": {
      "get": {
        "responses": {
          "200": {
            "description": "Default response description"
          }
        }
      }
    },
    "/node/network/nodes/self": {
      "get": {
        "responses": {
          "200": {
            "description": "Default response description"
          }
        }
      }
    },
    "/node/network/nodes/{node_id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetNode__NodeInfo"
                }
              }
            },
            "description": "Default response description"
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "node_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/node/primary": {
      "head": {
        "responses": {
          "200": {
            "description": "Default response description"
          }
        }
      }
    },
    "/node/quotes": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetQuotes__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/quotes/self": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/receipt": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "transaction_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Receipt"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/service/configuration": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfiguration"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/state": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetState__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/tx": {
      "get": {
        "parameters": [
          {
            "in": "query",
            "name": "transaction_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxStatus__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    },
    "/node/version": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetVersion__Out"
                }
              }
            },
            "description": "Default response description"
          }
        }
      }
    }
  },
  "servers": []
}