{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "type": "object",
    "title": "CCF configuration",
    "description": "JSON schema for configuration of cchost executable.",
    "properties": {
      "enclave": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "description": "Path to enclave application."
          },
          "type": {
            "type": "string",
            "enum": ["release", "debug", "virtual"],
            "default": "release",
            "description": "Type of enclave application."
          }
        },
        "required": ["file"]
      },
      "network": {
        "type": "object",
        "properties": {
          "node_to_node_interface": {
            "type": "object",
            "properties": {
              "bind_address": {
                "type": "string",
                "description": "Local address the node binds to and listens on for node-to-node connections."
              }
            },
            "description": "Address (host:port) to listen on for incoming node-to-node connections (e.g. internal consensus messages).",
            "required": [
              "bind_address"
            ]
          },
          "rpc_interfaces": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "required": ["bind_address"],
              "properties": {
                  "bind_address": {
                    "type": "string",
                    "description": "Local address the node binds to and listens on."
                  },
                  "published_rpc_address": {
                    "type": "string",
                    "default": "Value of \"bind_address\"",
                    "description": "The published RPC address advertised to clients."
                  },
                  "max_open_sessions_soft": {
                    "type": "integer",
                    "default": 1000,
                    "description": "The maximum number of active client sessions on that interface after which clients will receive an HTTP 503 error."
                  },
                  "max_open_sessions_hard": {
                    "type": "integer",
                    "default": 1010,
                    "description": "The maximum number of active client sessions on that interface after which clients sessions will be terminated, before the TLS handshake is complete. Note that its value must be greater than the value of max_open_sessions_soft."
                  }
                }
            },
            "description": "Addresses to listen on for incoming client TLS connections, as a dictionnary from unique interface name to RPC interface information."
          }
        },
        "required": [
          "node_to_node_interface",
          "rpc_interfaces"
        ]
      },
      "command": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["start", "join", "recover"],
            "default": "start",
            "description": "Type of CCF node"
          },
          "service_certificate_file": {
            "type": "string",
            "default": "service_cert.pem",
            "description" : "For start and recover nodes, path to which service certificate will be written to on startup. For join nodes, path to the certificate of the existing network to join."
          }
        },
        "allOf": [
          {
            "if": {
              "properties": {"type": {"const": "start"} }
            },
            "then": {
              "properties": {
                "start": {
                  "type": "object",
                  "properties": {
                    "constitution_files": {
                      "type": "array",
                      "items": {
                          "type": "string"
                      },
                      "description": "List of constitution files. These typically include actions.js, validate.js, resolve.js and apply.js."
                    },
                    "members": {
                      "type": "array",
                      "items": [
                        {
                          "type": "object",
                          "properties": {
                            "certificate_file": {
                              "type": "string",
                              "description": "Path to member x509 identity certificate (PEM)."
                            },
                            "encryption_public_key_file": {
                              "type": "string",
                              "description": "Path to member encryption public key (PEM)."
                            }
                          },
                          "data_json_file": {
                            "type": "string",
                            "description": "Path to member data file (JSON)."
                          },
                          "required": ["certificate_file"]
                        }
                      ],
                      "description": "List of initial consortium members files, including identity certificates, public encryption keys and member data files."
                    },
                    "service_configuration": {
                      "type": "object",
                      "properties": {
                        "recovery_threshold": {
                          "type": "integer",
                          "default": 0,
                          "description": "Number of recovery members required to recover the service. Note that if the recovery threshold is set to 0, it is automatically set to the number of recovery members specified in \"members\"."
                        },
                        "maximum_node_certificate_validity_days": {
                          "type": "integer",
                          "default": 365,
                          "description": "The maximum number of days allowed for node certificate validity period."
                        },
                        "reconfiguration_type": {
                          "type": "string",
                          "default": "OneTransaction",
                          "enum": ["OneTransaction", "TwoTransaction"]
                        }
                      },
                      "required": ["recovery_threshold"]
                    },
                    "initial_service_certificate_validity_days": {
                      "type": "integer",
                      "default": 1,
                      "description": "Initial validity period (days) for service certificate."
                    }
                  },
                  "required": [
                    "constitution_files",
                    "members"
                  ]
                }
              },
              "required": ["start"]
            }
          },
          {
            "if": {
              "properties": {"type": {"const": "join"} }
            },
            "then": {
              "properties": {
                "join": {
                  "type": "object",
                  "properties": {
                    "target_rpc_address": {
                      "type": "string",
                      "description": "Address (host:port) of a node of the existing service to join."
                    },
                    "retry_timeout": {
                      "type": "string",
                      "default": "1000ms",
                      "description": "Interval (time string) at which the node sends join requests to the existing network."
                    }
                  },
                  "required": ["target_rpc_address"]
                }
              },
              "required": ["join"]
            }
          },
          {
            "if": {
              "properties": {"type": {"const": "recover"} }
            },
            "then": {
              "properties": {
                "recover": {
                  "type": "object",
                  "properties": {
                    "initial_service_certificate_validity_days": {
                      "type": "integer",
                      "default": 1,
                      "description": "Initial validity period (days) for service certificate."
                    }
                  }
                }
              }
            }
          }
        ],
        "required": ["type"]
      }
    },
    "required": [
      "enclave", "network", "command"
    ]
  }