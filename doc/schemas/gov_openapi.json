{
  "components": {
    "responses": {
      "default": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/CCFError"
            }
          }
        },
        "description": "An error occurred"
      }
    },
    "schemas": {
      "Action": {
        "properties": {
          "args": {
            "$ref": "#/components/schemas/json"
          },
          "name": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "name",
          "args"
        ],
        "type": "object"
      },
      "Action_array": {
        "items": {
          "$ref": "#/components/schemas/Action"
        },
        "type": "array"
      },
      "Ballot": {
        "properties": {
          "ballot": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "ballot"
        ],
        "type": "object"
      },
      "CCFError": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "description": "Response error code. CCF error codes: https://microsoft.github.io/CCF/main/operations/troubleshooting.html#error-codes",
                "type": "string"
              },
              "message": {
                "description": "Response error message",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "CodeStatus": {
        "enum": [
          "AllowedToJoin"
        ],
        "type": "string"
      },
      "ConsensusType": {
        "enum": [
          "CFT",
          "BFT"
        ],
        "type": "string"
      },
      "EndpointKey": {
        "properties": {
          "uri_path": {
            "$ref": "#/components/schemas/string"
          },
          "verb": {
            "$ref": "#/components/schemas/HttpMethod"
          }
        },
        "required": [
          "uri_path",
          "verb"
        ],
        "type": "object"
      },
      "EndpointKey_to_EndpointProperties": {
        "items": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/EndpointKey"
              },
              {
                "$ref": "#/components/schemas/EndpointProperties"
              }
            ]
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "type": "array"
      },
      "EndpointMetrics": {
        "properties": {
          "metrics": {
            "$ref": "#/components/schemas/EndpointMetricsEntry_array"
          }
        },
        "required": [
          "metrics"
        ],
        "type": "object"
      },
      "EndpointMetricsEntry": {
        "properties": {
          "calls": {
            "$ref": "#/components/schemas/uint64"
          },
          "errors": {
            "$ref": "#/components/schemas/uint64"
          },
          "failures": {
            "$ref": "#/components/schemas/uint64"
          },
          "method": {
            "$ref": "#/components/schemas/string"
          },
          "path": {
            "$ref": "#/components/schemas/string"
          },
          "retries": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "path",
          "method",
          "calls",
          "errors",
          "failures",
          "retries"
        ],
        "type": "object"
      },
      "EndpointMetricsEntry_array": {
        "items": {
          "$ref": "#/components/schemas/EndpointMetricsEntry"
        },
        "type": "array"
      },
      "EndpointProperties": {
        "properties": {
          "authn_policies": {
            "$ref": "#/components/schemas/string_array"
          },
          "forwarding_required": {
            "$ref": "#/components/schemas/ForwardingRequired"
          },
          "js_function": {
            "$ref": "#/components/schemas/string"
          },
          "js_module": {
            "$ref": "#/components/schemas/string"
          },
          "mode": {
            "$ref": "#/components/schemas/Mode"
          },
          "openapi": {
            "$ref": "#/components/schemas/json"
          },
          "openapi_hidden": {
            "$ref": "#/components/schemas/boolean"
          }
        },
        "required": [
          "forwarding_required",
          "authn_policies"
        ],
        "type": "object"
      },
      "Failure": {
        "properties": {
          "reason": {
            "$ref": "#/components/schemas/string"
          },
          "trace": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "reason"
        ],
        "type": "object"
      },
      "ForwardingRequired": {
        "enum": [
          "sometimes",
          "always",
          "never"
        ],
        "type": "string"
      },
      "FullMemberDetails": {
        "properties": {
          "cert": {
            "$ref": "#/components/schemas/Pem"
          },
          "member_data": {
            "$ref": "#/components/schemas/json"
          },
          "public_encryption_key": {
            "$ref": "#/components/schemas/Pem"
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          }
        },
        "required": [
          "status",
          "member_data",
          "cert",
          "public_encryption_key"
        ],
        "type": "object"
      },
      "GetCode__Out": {
        "properties": {
          "versions": {
            "$ref": "#/components/schemas/GetCode__Version_array"
          }
        },
        "required": [
          "versions"
        ],
        "type": "object"
      },
      "GetCode__Version": {
        "properties": {
          "digest": {
            "$ref": "#/components/schemas/string"
          },
          "status": {
            "$ref": "#/components/schemas/CodeStatus"
          }
        },
        "required": [
          "digest",
          "status"
        ],
        "type": "object"
      },
      "GetCode__Version_array": {
        "items": {
          "$ref": "#/components/schemas/GetCode__Version"
        },
        "type": "array"
      },
      "GetCommit__Out": {
        "properties": {
          "transaction_id": {
            "$ref": "#/components/schemas/TransactionId"
          },
          "view_history": {
            "$ref": "#/components/schemas/TransactionId_array"
          }
        },
        "required": [
          "transaction_id"
        ],
        "type": "object"
      },
      "GetRecoveryShare__Out": {
        "properties": {
          "encrypted_share": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "encrypted_share"
        ],
        "type": "object"
      },
      "GetTxStatus__Out": {
        "properties": {
          "status": {
            "$ref": "#/components/schemas/TxStatus"
          },
          "transaction_id": {
            "$ref": "#/components/schemas/TransactionId"
          }
        },
        "required": [
          "transaction_id",
          "status"
        ],
        "type": "object"
      },
      "HttpMethod": {
        "type": "string"
      },
      "JSRuntimeOptions": {
        "properties": {
          "max_execution_time_ms": {
            "$ref": "#/components/schemas/uint64"
          },
          "max_heap_bytes": {
            "$ref": "#/components/schemas/uint64"
          },
          "max_stack_bytes": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "max_heap_bytes",
          "max_stack_bytes",
          "max_execution_time_ms"
        ],
        "type": "object"
      },
      "JwtIssuerKeyFilter": {
        "enum": [
          "all",
          "sgx"
        ],
        "type": "string"
      },
      "JwtIssuerKeyPolicy": {
        "properties": {
          "sgx_claims": {
            "$ref": "#/components/schemas/string_to_string"
          }
        },
        "required": [
          "sgx_claims"
        ],
        "type": "object"
      },
      "JwtIssuerMetadata": {
        "properties": {
          "auto_refresh": {
            "$ref": "#/components/schemas/boolean"
          },
          "ca_cert_bundle_name": {
            "$ref": "#/components/schemas/string"
          },
          "key_filter": {
            "$ref": "#/components/schemas/JwtIssuerKeyFilter"
          },
          "key_policy": {
            "$ref": "#/components/schemas/JwtIssuerKeyPolicy"
          }
        },
        "required": [
          "key_filter"
        ],
        "type": "object"
      },
      "KeyIdInfo": {
        "properties": {
          "cert": {
            "$ref": "#/components/schemas/Pem"
          },
          "issuer": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "issuer",
          "cert"
        ],
        "type": "object"
      },
      "MDType": {
        "enum": [
          "NONE",
          "SHA1",
          "SHA256",
          "SHA384",
          "SHA512"
        ],
        "type": "string"
      },
      "MemberAck": {
        "properties": {
          "cose_sign1_req": {
            "$ref": "#/components/schemas/base64string"
          },
          "signed_req": {
            "$ref": "#/components/schemas/SignedReq"
          },
          "state_digest": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "state_digest"
        ],
        "type": "object"
      },
      "MemberDetails": {
        "properties": {
          "member_data": {
            "$ref": "#/components/schemas/json"
          },
          "status": {
            "$ref": "#/components/schemas/MemberStatus"
          }
        },
        "required": [
          "status"
        ],
        "type": "object"
      },
      "MemberId": {
        "format": "hex",
        "pattern": "^[a-f0-9]{64}$",
        "type": "string"
      },
      "MemberId_to_Failure": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Failure"
        },
        "type": "object"
      },
      "MemberId_to_FullMemberDetails": {
        "additionalProperties": {
          "$ref": "#/components/schemas/FullMemberDetails"
        },
        "type": "object"
      },
      "MemberId_to_MemberAck": {
        "additionalProperties": {
          "$ref": "#/components/schemas/MemberAck"
        },
        "type": "object"
      },
      "MemberId_to_MemberDetails": {
        "additionalProperties": {
          "$ref": "#/components/schemas/MemberDetails"
        },
        "type": "object"
      },
      "MemberId_to_Pem": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Pem"
        },
        "type": "object"
      },
      "MemberId_to_SignedReq": {
        "additionalProperties": {
          "$ref": "#/components/schemas/SignedReq"
        },
        "type": "object"
      },
      "MemberId_to_base64string": {
        "additionalProperties": {
          "$ref": "#/components/schemas/base64string"
        },
        "type": "object"
      },
      "MemberId_to_boolean": {
        "additionalProperties": {
          "$ref": "#/components/schemas/boolean"
        },
        "type": "object"
      },
      "MemberId_to_string": {
        "additionalProperties": {
          "$ref": "#/components/schemas/string"
        },
        "type": "object"
      },
      "MemberStatus": {
        "enum": [
          "Accepted",
          "Active"
        ],
        "type": "string"
      },
      "Mode": {
        "enum": [
          "readwrite",
          "readonly",
          "historical"
        ],
        "type": "string"
      },
      "NodeId_to_NodeInfo": {
        "additionalProperties": {
          "$ref": "#/components/schemas/NodeInfo"
        },
        "type": "object"
      },
      "NodeId_to_Pem": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Pem"
        },
        "type": "object"
      },
      "NodeInfo": {
        "properties": {
          "acme": {
            "properties": {
              "configurations": {
                "additionalProperties": {
                  "properties": {
                    "ca_certs": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "challenge_type": {
                      "type": "string"
                    },
                    "contact": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "directory_url": {
                      "type": "string"
                    },
                    "service_dns_name": {
                      "type": "string"
                    },
                    "terms_of_service_agreed": {
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "ca_certs",
                    "directory_url",
                    "service_dns_name",
                    "contact",
                    "terms_of_service_agreed",
                    "challenge_type"
                  ],
                  "type": "object"
                },
                "type": "object"
              }
            },
            "required": [
              "configurations"
            ],
            "type": "object"
          },
          "cert": {
            "$ref": "#/components/schemas/Pem"
          },
          "certificate_signing_request": {
            "$ref": "#/components/schemas/Pem"
          },
          "code_digest": {
            "$ref": "#/components/schemas/string"
          },
          "encryption_pub_key": {
            "$ref": "#/components/schemas/Pem"
          },
          "ledger_secret_seqno": {
            "$ref": "#/components/schemas/uint64"
          },
          "node_data": {
            "$ref": "#/components/schemas/json"
          },
          "node_to_node_interface": {
            "properties": {
              "accepted_endpoints": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "app_protocol": {
                "enum": [
                  "HTTP1",
                  "HTTP2"
                ],
                "type": "string"
              },
              "bind_address": {
                "type": "string"
              },
              "endorsement": {
                "properties": {
                  "acme_configuration": {
                    "type": "string"
                  },
                  "authority": {
                    "enum": [
                      "Node",
                      "Service",
                      "ACME",
                      "Unsecured"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "authority"
                ],
                "type": "object"
              },
              "forwarding_timeout_ms": {
                "maximum": 18446744073709551615,
                "minimum": 0,
                "type": "integer"
              },
              "http_configuration": {
                "properties": {
                  "initial_window_size": {
                    "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                    "type": "string"
                  },
                  "max_body_size": {
                    "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                    "type": "string"
                  },
                  "max_concurrent_streams_count": {
                    "maximum": 18446744073709551615,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "max_frame_size": {
                    "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                    "type": "string"
                  },
                  "max_header_size": {
                    "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                    "type": "string"
                  },
                  "max_headers_count": {
                    "maximum": 4294967295,
                    "minimum": 0,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "max_open_sessions_hard": {
                "maximum": 18446744073709551615,
                "minimum": 0,
                "type": "integer"
              },
              "max_open_sessions_soft": {
                "maximum": 18446744073709551615,
                "minimum": 0,
                "type": "integer"
              },
              "protocol": {
                "type": "string"
              },
              "published_address": {
                "type": "string"
              }
            },
            "required": [
              "bind_address"
            ],
            "type": "object"
          },
          "public_key": {
            "$ref": "#/components/schemas/Pem"
          },
          "quote_info": {
            "$ref": "#/components/schemas/QuoteInfo"
          },
          "retired_committed": {
            "$ref": "#/components/schemas/boolean"
          },
          "rpc_interfaces": {
            "additionalProperties": {
              "properties": {
                "accepted_endpoints": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "app_protocol": {
                  "enum": [
                    "HTTP1",
                    "HTTP2"
                  ],
                  "type": "string"
                },
                "bind_address": {
                  "type": "string"
                },
                "endorsement": {
                  "properties": {
                    "acme_configuration": {
                      "type": "string"
                    },
                    "authority": {
                      "enum": [
                        "Node",
                        "Service",
                        "ACME",
                        "Unsecured"
                      ],
                      "type": "string"
                    }
                  },
                  "required": [
                    "authority"
                  ],
                  "type": "object"
                },
                "forwarding_timeout_ms": {
                  "maximum": 18446744073709551615,
                  "minimum": 0,
                  "type": "integer"
                },
                "http_configuration": {
                  "properties": {
                    "initial_window_size": {
                      "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                      "type": "string"
                    },
                    "max_body_size": {
                      "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                      "type": "string"
                    },
                    "max_concurrent_streams_count": {
                      "maximum": 18446744073709551615,
                      "minimum": 0,
                      "type": "integer"
                    },
                    "max_frame_size": {
                      "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                      "type": "string"
                    },
                    "max_header_size": {
                      "pattern": "^[0-9]+(B|KB|MB|GB|TB|PB)?$",
                      "type": "string"
                    },
                    "max_headers_count": {
                      "maximum": 4294967295,
                      "minimum": 0,
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "max_open_sessions_hard": {
                  "maximum": 18446744073709551615,
                  "minimum": 0,
                  "type": "integer"
                },
                "max_open_sessions_soft": {
                  "maximum": 18446744073709551615,
                  "minimum": 0,
                  "type": "integer"
                },
                "protocol": {
                  "type": "string"
                },
                "published_address": {
                  "type": "string"
                }
              },
              "required": [
                "bind_address"
              ],
              "type": "object"
            },
            "type": "object"
          },
          "status": {
            "$ref": "#/components/schemas/NodeStatus"
          }
        },
        "required": [
          "node_to_node_interface",
          "rpc_interfaces",
          "quote_info",
          "encryption_pub_key",
          "status"
        ],
        "type": "object"
      },
      "NodeStatus": {
        "enum": [
          "Pending",
          "Trusted",
          "Retired"
        ],
        "type": "string"
      },
      "Pem": {
        "type": "string"
      },
      "Proposal": {
        "properties": {
          "actions": {
            "$ref": "#/components/schemas/Action_array"
          }
        },
        "required": [
          "actions"
        ],
        "type": "object"
      },
      "ProposalInfo": {
        "properties": {
          "ballots": {
            "$ref": "#/components/schemas/MemberId_to_string"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "final_votes": {
            "$ref": "#/components/schemas/MemberId_to_boolean"
          },
          "proposer_id": {
            "$ref": "#/components/schemas/MemberId"
          },
          "state": {
            "$ref": "#/components/schemas/ProposalState"
          },
          "vote_failures": {
            "$ref": "#/components/schemas/MemberId_to_Failure"
          }
        },
        "required": [
          "proposer_id",
          "state",
          "ballots"
        ],
        "type": "object"
      },
      "ProposalInfoSummary": {
        "properties": {
          "ballot_count": {
            "$ref": "#/components/schemas/uint64"
          },
          "failure": {
            "$ref": "#/components/schemas/Failure"
          },
          "proposal_id": {
            "$ref": "#/components/schemas/string"
          },
          "proposer_id": {
            "$ref": "#/components/schemas/MemberId"
          },
          "state": {
            "$ref": "#/components/schemas/ProposalState"
          },
          "vote_failures": {
            "$ref": "#/components/schemas/MemberId_to_Failure"
          },
          "votes": {
            "$ref": "#/components/schemas/MemberId_to_boolean"
          }
        },
        "required": [
          "proposal_id",
          "proposer_id",
          "state",
          "ballot_count"
        ],
        "type": "object"
      },
      "ProposalState": {
        "enum": [
          "Open",
          "Accepted",
          "Withdrawn",
          "Rejected",
          "Failed",
          "Dropped"
        ],
        "type": "string"
      },
      "QuoteFormat": {
        "enum": [
          "OE_SGX_v1",
          "Insecure_Virtual",
          "AMD_SEV_SNP_v1"
        ],
        "type": "string"
      },
      "QuoteInfo": {
        "properties": {
          "endorsed_tcb": {
            "$ref": "#/components/schemas/string"
          },
          "endorsements": {
            "$ref": "#/components/schemas/base64string"
          },
          "format": {
            "$ref": "#/components/schemas/QuoteFormat"
          },
          "quote": {
            "$ref": "#/components/schemas/base64string"
          },
          "uvm_endorsements": {
            "$ref": "#/components/schemas/base64string"
          }
        },
        "required": [
          "format",
          "quote",
          "endorsements"
        ],
        "type": "object"
      },
      "ReconfigurationType": {
        "enum": [
          "OneTransaction",
          "TwoTransaction"
        ],
        "type": "string"
      },
      "ServiceConfiguration": {
        "properties": {
          "consensus": {
            "$ref": "#/components/schemas/ConsensusType"
          },
          "maximum_node_certificate_validity_days": {
            "$ref": "#/components/schemas/uint64"
          },
          "maximum_service_certificate_validity_days": {
            "$ref": "#/components/schemas/uint64"
          },
          "recent_cose_proposals_window_size": {
            "$ref": "#/components/schemas/uint64"
          },
          "reconfiguration_type": {
            "$ref": "#/components/schemas/ReconfigurationType"
          },
          "recovery_threshold": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "recovery_threshold"
        ],
        "type": "object"
      },
      "ServiceInfo": {
        "properties": {
          "cert": {
            "$ref": "#/components/schemas/Pem"
          },
          "current_service_create_txid": {
            "$ref": "#/components/schemas/TransactionId"
          },
          "previous_service_identity_version": {
            "$ref": "#/components/schemas/uint64"
          },
          "recovery_count": {
            "$ref": "#/components/schemas/uint64"
          },
          "service_data": {
            "$ref": "#/components/schemas/json"
          },
          "status": {
            "$ref": "#/components/schemas/ServiceStatus"
          }
        },
        "required": [
          "cert",
          "status"
        ],
        "type": "object"
      },
      "ServiceStatus": {
        "enum": [
          "Opening",
          "Open",
          "WaitingForRecoveryShares",
          "Recovering"
        ],
        "type": "string"
      },
      "SgxAttestationMeasurement": {
        "format": "hex",
        "pattern": "^[a-f0-9]64$",
        "type": "string"
      },
      "SgxAttestationMeasurement_to_CodeStatus": {
        "items": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SgxAttestationMeasurement"
              },
              {
                "$ref": "#/components/schemas/CodeStatus"
              }
            ]
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "type": "array"
      },
      "Sha256Digest": {
        "format": "hex",
        "pattern": "^[a-f0-9]{32}$",
        "type": "string"
      },
      "Sha256Digest_to_string": {
        "items": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/Sha256Digest"
              },
              {
                "$ref": "#/components/schemas/string"
              }
            ]
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "type": "array"
      },
      "SignedReq": {
        "properties": {
          "key_id": {
            "$ref": "#/components/schemas/string"
          },
          "md": {
            "$ref": "#/components/schemas/MDType"
          },
          "req": {
            "$ref": "#/components/schemas/base64string"
          },
          "request_body": {
            "$ref": "#/components/schemas/base64string"
          },
          "sig": {
            "$ref": "#/components/schemas/base64string"
          }
        },
        "required": [
          "sig",
          "req",
          "request_body",
          "md",
          "key_id"
        ],
        "type": "object"
      },
      "SnpAttestationMeasurement": {
        "format": "hex",
        "pattern": "^[a-f0-9]96$",
        "type": "string"
      },
      "SnpAttestationMeasurement_to_CodeStatus": {
        "items": {
          "items": {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SnpAttestationMeasurement"
              },
              {
                "$ref": "#/components/schemas/CodeStatus"
              }
            ]
          },
          "maxItems": 2,
          "minItems": 2,
          "type": "array"
        },
        "type": "array"
      },
      "StateDigest": {
        "properties": {
          "state_digest": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "state_digest"
        ],
        "type": "object"
      },
      "SubmitRecoveryShare__In": {
        "properties": {
          "share": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "share"
        ],
        "type": "object"
      },
      "SubmitRecoveryShare__Out": {
        "properties": {
          "message": {
            "$ref": "#/components/schemas/string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "TransactionId": {
        "pattern": "^[0-9]+\\.[0-9]+$",
        "type": "string"
      },
      "TransactionId_array": {
        "items": {
          "$ref": "#/components/schemas/TransactionId"
        },
        "type": "array"
      },
      "TxStatus": {
        "enum": [
          "Unknown",
          "Pending",
          "Committed",
          "Invalid"
        ],
        "type": "string"
      },
      "UVMEndorsementsData": {
        "properties": {
          "svn": {
            "$ref": "#/components/schemas/uint64"
          }
        },
        "required": [
          "svn"
        ],
        "type": "object"
      },
      "UserDetails": {
        "properties": {
          "user_data": {
            "$ref": "#/components/schemas/json"
          }
        },
        "required": [
          "user_data"
        ],
        "type": "object"
      },
      "UserId_to_Pem": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Pem"
        },
        "type": "object"
      },
      "UserId_to_UserDetails": {
        "additionalProperties": {
          "$ref": "#/components/schemas/UserDetails"
        },
        "type": "object"
      },
      "base64string": {
        "format": "base64",
        "type": "string"
      },
      "boolean": {
        "type": "boolean"
      },
      "json": {},
      "string": {
        "type": "string"
      },
      "string_array": {
        "items": {
          "$ref": "#/components/schemas/string"
        },
        "type": "array"
      },
      "string_to_JwtIssuerMetadata": {
        "additionalProperties": {
          "$ref": "#/components/schemas/JwtIssuerMetadata"
        },
        "type": "object"
      },
      "string_to_KeyIdInfo": {
        "additionalProperties": {
          "$ref": "#/components/schemas/KeyIdInfo"
        },
        "type": "object"
      },
      "string_to_Pem": {
        "additionalProperties": {
          "$ref": "#/components/schemas/Pem"
        },
        "type": "object"
      },
      "string_to_ProposalInfo": {
        "additionalProperties": {
          "$ref": "#/components/schemas/ProposalInfo"
        },
        "type": "object"
      },
      "string_to_UVMEndorsementsData": {
        "additionalProperties": {
          "$ref": "#/components/schemas/UVMEndorsementsData"
        },
        "type": "object"
      },
      "string_to_base64string": {
        "additionalProperties": {
          "$ref": "#/components/schemas/base64string"
        },
        "type": "object"
      },
      "string_to_string": {
        "additionalProperties": {
          "$ref": "#/components/schemas/string"
        },
        "type": "object"
      },
      "string_to_string_to_UVMEndorsementsData": {
        "additionalProperties": {
          "$ref": "#/components/schemas/string_to_UVMEndorsementsData"
        },
        "type": "object"
      },
      "uint64": {
        "maximum": 18446744073709551615,
        "minimum": 0,
        "type": "integer"
      }
    },
    "securitySchemes": {
      "member_cose_sign1": {
        "description": "Request payload must be a COSE Sign1 document, with expected protected headers. Signer must be a member identity registered with this service.",
        "scheme": "cose_sign1",
        "type": "http"
      }
    },
    "x-ccf-forwarding": {
      "always": {
        "description": "If this request is made to a backup node, it will be forwarded to the primary node for execution.",
        "value": "always"
      },
      "never": {
        "description": "This call will never be forwarded, and is always executed on the receiving node, potentially breaking session consistency. If this attempts to write on a backup, this will fail.",
        "value": "never"
      },
      "sometimes": {
        "description": "If this request is made to a backup node, it may be forwarded to the primary node for execution. Specifically, if this request is sent as part of a session which was already forwarded, then it will also be forwarded.",
        "value": "sometimes"
      }
    }
  },
  "info": {
    "description": "This API is used to submit and query proposals which affect CCF's public governance tables.",
    "title": "CCF Governance API",
    "version": "4.0.0"
  },
  "openapi": "3.0.0",
  "paths": {
    "/gov/ack": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateDigest"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "204": {
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "Provide a member endorsement of a service state digest",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/ack/update_state_digest": {
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StateDigest"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "Update and fetch a service state digest, for the purpose of member endorsement",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/api": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "OpenAPI schema",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/api/metrics": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointMetrics"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Usage metrics for endpoints",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/code": {
      "get": {
        "deprecated": true,
        "description": "Permitted SGX code identities",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCode__Out"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "This endpoint is deprecated. It is replaced by /gov/kv/nodes/code_ids endpoint",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/commit": {
      "get": {
        "description": "Latest transaction ID that has been committed on the service",
        "parameters": [
          {
            "in": "query",
            "name": "view_history",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/boolean"
            }
          },
          {
            "in": "query",
            "name": "view_history_since",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/uint64"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommit__Out"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Current commit level",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/encrypted_recovery_share/{member_id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecoveryShare__Out"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "A member's recovery share",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "member_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/gov/jwt_keys/all": {
      "get": {
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_KeyIdInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "This endpoint is deprecated. It is replaced by /gov/kv/jwt/public_signing_keys, /gov/kv/jwt/public_signing_key_issue, and /gov/kv/jwt/issuers endpoints.",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/kv/constitution": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/cose_history": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_base64string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/cose_recent_proposals": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/endpoints": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EndpointKey_to_EndpointProperties"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/history": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_SignedReq"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/js_runtime_options": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JSRuntimeOptions"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/jwt/issuers": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_JwtIssuerMetadata"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/jwt/public_signing_key_issuer": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/jwt/public_signing_keys": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_base64string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/members/acks": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_MemberAck"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/members/certs": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_Pem"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/members/encryption_public_keys": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_Pem"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/members/info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_MemberDetails"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/modules": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/modules_quickjs_bytecode": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_base64string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/modules_quickjs_version": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/nodes/code_ids": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SgxAttestationMeasurement_to_CodeStatus"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/nodes/endorsed_certificates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeId_to_Pem"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/nodes/info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NodeId_to_NodeInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/nodes/snp/host_data": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Sha256Digest_to_string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/nodes/snp/measurements": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SnpAttestationMeasurement_to_CodeStatus"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/nodes/snp/uvm_endorsements": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_string_to_UVMEndorsementsData"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/proposals": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_base64string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/proposals_info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/service/acme_certificates": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_Pem"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/service/config": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceConfiguration"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/service/info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/service/previous_service_identity": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pem"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/tls/ca_cert_bundles": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_string"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/users/certs": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserId_to_Pem"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/kv/users/info": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserId_to_UserDetails"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/members": {
      "get": {
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberId_to_FullMemberDetails"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "This endpoint is deprecated. It is replaced by /gov/kv/members/certs, /gov/kv/members/encryption_public_keys, /gov/kv/members/info endpoints.",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/proposals": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/string_to_ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Proposed changes to the service pending resolution",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Proposal"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfoSummary"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "Submit a proposed change to the service",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/proposals/{proposal_id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Information about a proposed change to the service",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "proposal_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/gov/proposals/{proposal_id}/actions": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Proposal"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Actions contained in a proposed change to the service",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "proposal_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/gov/proposals/{proposal_id}/ballots": {
      "parameters": [
        {
          "in": "path",
          "name": "proposal_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Ballot"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfoSummary"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "Ballots submitted against a proposed change to the service",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/proposals/{proposal_id}/ballots/{member_id}": {
      "get": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ballot"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Ballot for a given member about a proposed change to the service",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "proposal_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "in": "path",
          "name": "member_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/gov/proposals/{proposal_id}/withdraw": {
      "parameters": [
        {
          "in": "path",
          "name": "proposal_id",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProposalInfo"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "Withdraw a proposed change to the service",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/receipt": {
      "get": {
        "description": "A signed statement from the service over a transaction entry in the ledger",
        "parameters": [
          {
            "in": "query",
            "name": "transaction_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/json"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Receipt for a transaction",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    },
    "/gov/recovery_share": {
      "get": {
        "deprecated": true,
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRecoveryShare__Out"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "A member's recovery share",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      },
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SubmitRecoveryShare__In"
              }
            }
          },
          "description": "Auto-generated request body schema"
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubmitRecoveryShare__Out"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "security": [
          {
            "member_cose_sign1": []
          }
        ],
        "summary": "Provide a recovery share for the purpose of completing a service recovery",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/always"
        }
      }
    },
    "/gov/tx": {
      "get": {
        "description": "Possible statuses returned are Unknown, Pending, Committed or Invalid.",
        "parameters": [
          {
            "in": "query",
            "name": "transaction_id",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TransactionId"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetTxStatus__Out"
                }
              }
            },
            "description": "Default response description"
          },
          "default": {
            "$ref": "#/components/responses/default"
          }
        },
        "summary": "Current status of a transaction",
        "x-ccf-forwarding": {
          "$ref": "#/components/x-ccf-forwarding/sometimes"
        }
      }
    }
  },
  "servers": []
}